#ifndef _UML_UML_STABLE_H_
#define _UML_UML_STABLE_H_

/**
 * Comprehensive include of all stable non-abstract parts of the api
 **/

#include "uml/abstraction.h"
#include "uml/action.h"
#include "uml/actionInputPin.h"
#include "uml/activity.h"
#include "uml/activityEdge.h"
#include "uml/activityFinalNode.h"
#include "uml/activityNode.h"
#include "uml/activityParameterNode.h"
#include "uml/activityPartition.h"
#include "uml/behavior.h"
#include "uml/callBehaviorAction.h"
#include "uml/centralBufferNode.h"
#include "uml/class.h"
#include "uml/comment.h"
#include "uml/controlFlow.h"
#include "uml/artifact.h"
#include "uml/association.h"
#include "uml/connector.h"
#include "uml/connectorEnd.h"
#include "uml/dataStoreNode.h"
#include "uml/dataType.h"
#include "uml/decisionNode.h"
#include "uml/dependency.h"
#include "uml/deployment.h"
#include "uml/enumeration.h"
#include "uml/enumerationLiteral.h"
#include "uml/exceptionHandler.h"
#include "uml/executableNode.h"
#include "uml/expression.h"
#include "uml/extension.h"
#include "uml/flowFinalNode.h"
#include "uml/forkNode.h"
#include "uml/extensionEnd.h"
#include "uml/generalization.h"
#include "uml/generalizationSet.h"
#include "uml/initialNode.h"
#include "uml/instanceSpecification.h"
#include "uml/instanceValue.h"
#include "uml/interface.h"
#include "uml/interfaceRealization.h"
#include "uml/interruptibleActivityRegion.h"
#include "uml/joinNode.h"
#include "uml/literalBool.h"
#include "uml/literalInt.h"
#include "uml/literalNull.h"
#include "uml/literalReal.h"
#include "uml/literalString.h"
#include "uml/literalUnlimitedNatural.h"
#include "uml/manifestation.h"
#include "uml/mergeNode.h"
#include "uml/model.h"
#include "uml/objectFlow.h"
#include "uml/opaqueAction.h"
#include "uml/opaqueBehavior.h"
#include "uml/operation.h"
#include "uml/package.h"
#include "uml/packageMerge.h"
#include "uml/parameter.h"
#include "uml/port.h"
#include "uml/primitiveType.h"
#include "uml/profile.h"
#include "uml/profileApplication.h"
#include "uml/property.h"
#include "uml/realization.h"
#include "uml/reception.h"
#include "uml/signal.h"
#include "uml/slot.h"
#include "uml/stereotype.h"
#include "uml/templateBinding.h"
#include "uml/templateParameter.h"
#include "uml/templateParameterSubstitution.h"
#include "uml/templateSignature.h"
#include "uml/umlManager.h"
#include "uml/umlPtr.h"
#include "uml/usage.h"
#include "uml/valuePin.h"

#include "uml/managers/umlClient.h"
#include "uml/parsers/parser.h"

namespace UML {
    typedef UmlPtr<PrimitiveType> PrimitiveTypePtr;
    typedef UmlPtr<LiteralBool> LiteralBoolPtr;
    typedef UmlPtr<ExceptionHandler> ExceptionHandlerPtr;
    typedef UmlPtr<OpaqueAction> OpaqueActionPtr;
}

#endif